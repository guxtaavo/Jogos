from random import randint
import os

class JogoDaAdivinhacao:
    def _exibir_a_mensagem_inicial():
        os.system('cls')
        print('ùêâùêéùêÜùêé ùêÉùêÄ ùêÄùêÉùêàùêïùêàùêçùêáùêÄ√á√Éùêé')
        print('Ol√°, voc√™ escolheu a op√ß√£o de jogar o jogo da adivinha√ß√£o!')

    def _valida_a_opcao(opcao):
        while True:
            if opcao in [1, 2, 3, 4]:
                match opcao:
                    case 1:
                        print('Voc√™ escolheu o n√≠vel f√°cil...\n')
                        return 1
                    case 2: 
                        print('Voc√™ escolheu o n√≠vel m√©dio...\n')
                        return 2
                    case 3: 
                        print('Voc√™ escolheu o n√≠vel d√≠ficil...\n')
                        return 3
            else:
                opcao = int(input('Voc√™ digitou uma op√ß√£o inv√°lida, porfavor, digite novamente: '))

    def _exibir_mensagem_final_de_jogo():
        print()
        print('*'*20)
        print('1. Jogar novamente')
        print('2. Sair')
        print('*'*20)
        print()
        loop = True
        try:
            while loop:
                escolha = int(input('Deseja jogar novamente ou sair: '))
                if escolha in [1,2]:
                    if escolha == 1:
                        os.system('cls')
                        JogoDaAdivinhacao.rodar_o_jogo()
                        loop = False
                    else:
                        print('Volte mais vezes! At√© a pr√≥xima...')
                        loop = False
                else:
                    escolha = int(input('Voc√™ digitou uma op√ß√£o inv√°lida, tente novamente:  '))
        except:
            print('Voc√™ digitou algo inv√°lido... tente novamente mais tarde.')
    
    def jogar(opcao):
        if opcao == 1:
            vidas = 7
        elif opcao == 2:
            vidas = 5
        else:
            vidas = 3
        
        numero_aleatorio = randint(0,100)

        chute = int(input('Porfavor, tente adivinhar o numero: '))
        loop = True

        while loop:
            if chute > numero_aleatorio:
                print('Voc√™ digitou um n√∫mero maior... ')
                vidas -= 1
                if vidas != 0:
                    chute = int(input('\nPorfavor, tente adivinhar o numero: '))
                    print('')
                else:
                    os.system('cls')
                    print(f'Que pena, voc√™ n√£o teve sorte dessa vez... O n√∫mero correto era: {numero_aleatorio}.')
                    loop = False
                    JogoDaAdivinhacao._exibir_mensagem_final_de_jogo()
            elif chute == numero_aleatorio:
                os.system('cls')
                print(f'Parab√©ns, voc√™ √© um g√™nio! Ganhou! O n√∫mero correto era {numero_aleatorio}.')
                loop = False
                JogoDaAdivinhacao._exibir_mensagem_final_de_jogo()
            else:
                print('Voc√™ digitou um n√∫mero menor... ')
                vidas -= 1
                if vidas != 0:
                    chute = int(input('\nPorfavor, tente adivinhar o numero: '))
                else:
                    os.system('cls')
                    print(f'Que pena, voc√™ n√£o teve sorte dessa vez... O n√∫mero correto era: {numero_aleatorio}.')
                    loop = False
                    JogoDaAdivinhacao._exibir_mensagem_final_de_jogo()

            

    def _escolha_da_dificuldade():
        print('1. F√°cil')
        print('2. M√©dio')
        print('3. Dificil')
        try:
            opcao = int(input('Por favor, escolha a op√ß√£o desejada: '))
            opcao_validada = JogoDaAdivinhacao._valida_a_opcao(opcao)
        except:
            print(f'Voc√™ digitou algo inv√°lido. Porfavor, tente novamente mais tarde.')
        else:
            JogoDaAdivinhacao.jogar(opcao_validada)
            

    @staticmethod
    def rodar_o_jogo():
        numero_aleatorio = randint(0,100)
        JogoDaAdivinhacao._exibir_a_mensagem_inicial()
        JogoDaAdivinhacao._escolha_da_dificuldade()
